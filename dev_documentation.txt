=================================
DEVELOPMENT DOCUMENTATION
=================================

Date: Saturday, October 4, 2025
Time: Current session

=================================
CHANGES: GitHub Pages Deployment Configuration
=================================

OBJECTIVE:
Configure the Next.js portfolio application to deploy directly to GitHub Pages from the main branch.

RATIONALE:
GitHub Pages only serves static HTML files and cannot run Node.js server-side code. Next.js by default uses server-side rendering (SSR), so we need to configure it for static site generation (SSG) to be compatible with GitHub Pages.

CHANGES MADE:

1. NEXT.CONFIG.JS - Static Export Configuration
   File: /Users/langgui/buildwithlang/next.config.js
   Changes:
   - Added `output: 'export'` to enable static HTML export
   - Set `images.unoptimized: true` (required for static export, as Next.js Image Optimization API requires a server)
   - Added `trailingSlash: true` for better GitHub Pages compatibility
   
   Impact: Next.js will now generate a static site in the 'out' directory instead of requiring a Node.js server.

2. GITHUB ACTIONS WORKFLOW - Automated Deployment
   File: /Users/langgui/buildwithlang/.github/workflows/deploy.yml (NEW)
   Purpose: Automates the build and deployment process when code is pushed to main branch
   
   Workflow Steps:
   - Triggers on push to main branch or manual workflow dispatch
   - Sets proper permissions for GitHub Pages deployment
   - Build Job:
     * Checks out code
     * Sets up Node.js 20
     * Installs dependencies with npm ci
     * Builds the Next.js site
     * Uploads the 'out' folder as a Pages artifact
   - Deploy Job:
     * Deploys the artifact to GitHub Pages
     * Provides the deployment URL
   
   Impact: Automatic deployment on every push to main, no manual build/deploy steps needed.

3. .NOJEKYLL FILE
   File: /Users/langgui/buildwithlang/public/.nojekyll (NEW)
   Purpose: Tells GitHub Pages not to process the site with Jekyll
   
   Impact: Prevents GitHub Pages from ignoring files/folders that start with underscores (which Next.js uses for its static assets like _next/).

4. README.MD - Deployment Documentation
   File: /Users/langgui/buildwithlang/README.md
   Changes:
   - Added "Deployment" section with GitHub Pages setup instructions
   - Documented first-time setup steps
   - Added manual deployment instructions
   
   Impact: Clear documentation for users on how to configure and deploy the site.

SETUP INSTRUCTIONS FOR USER:

To complete the GitHub Pages deployment setup:

1. Push these changes to your GitHub repository:
   ```bash
   git add .
   git commit -m "Configure GitHub Pages deployment"
   git push origin main
   ```

2. Go to your GitHub repository settings:
   - Navigate to: Settings → Pages
   - Under "Build and deployment":
     * Source: Select "GitHub Actions" (NOT "Deploy from a branch")
   
3. The GitHub Actions workflow will automatically run and deploy your site.

4. Once deployed, your site will be available at:
   https://[your-username].github.io/[repository-name]/

TECHNICAL NOTES:

- Static Export Limitations:
  * No server-side rendering (SSR)
  * No API routes
  * No dynamic routes with getServerSideProps
  * Image optimization is disabled (images served as-is)

- This portfolio uses:
  * Static page generation (all pages are pre-rendered at build time)
  * Client-side rendering with React
  * No API routes
  Therefore, it is fully compatible with static export.

- The workflow uses:
  * actions/checkout@v4
  * actions/setup-node@v4
  * actions/upload-pages-artifact@v3
  * actions/deploy-pages@v4

TESTING:

Before deployment, verify the static build works locally:
```bash
npm run build
# The 'out' folder should be created with all static files
```

BACKWARD COMPATIBILITY:
All existing functionality is preserved. The site will work exactly the same way, but now served as static files instead of from a Node.js server.

TEST FIXES:

Fixed outdated test expectations that were causing failures:

1. Hero.test.tsx (line 23):
   - Changed expected name from "Your Name" to "Zhilang Gui"
   
2. Contact.test.tsx (line 63):
   - Updated success message expectation to match actual message: "Message sent successfully! I'll get back to you soon."
   - Added timeout option to waitFor (2000ms)
   
3. Contact.test.tsx (lines 69-71):
   - Changed email from "hello@example.com" to "lang.gui.bu@gmail.com"
   - Changed phone from "+1 (555) 123-4567" to "Available upon request"
   - San Francisco, CA remained the same

All 13 tests now pass successfully.

VERIFICATION COMPLETED:

✓ Static build successful - Next.js generated static HTML in 'out' directory
✓ All tests passing (13 passed, 3 test suites)
✓ No linting errors
✓ Build artifacts created successfully:
  - index.html (main page)
  - 404.html (error page)
  - .nojekyll file (prevents Jekyll processing)
  - _next folder (static assets)

=================================
END OF DOCUMENTATION UPDATE
=================================

